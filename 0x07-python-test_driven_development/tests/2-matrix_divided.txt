# Import the matrix divided function
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

# Test with a standard matrix and divisor
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

# Test with different sizes of rows in matrix, should raise TypeError
>>> matrix = [[1, 2, 3], [4, 5]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

# Test with non-numeric div, should raise TypeError
>>> matrix = [[1, 2, 3], [4, 5, 3]]
>>> matrix_divided(matrix, "3")
Traceback (most recent call last):
    ...
TypeError: div must be a number

# Test with div as 0, should raise ZeroDivisionError
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero

# Test with non-numeric elements in matrix, should raise TypeError
>>> matrix = [[1, 2, 3], [4, "5", 6]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Test with a float divisor
>>> matrix = [[4, 9, 16], [25, 36, 49]]
>>> matrix_divided(matrix, 2.0)
[[2.0, 4.5, 8.0], [12.5, 18.0, 24.5]]
